2023/06/11 11:40:13 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
    CUDA available: True
    numpy_random_seed: 650527133
    GPU 0: NVIDIA GeForce RTX 2080 Ti
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.1, V11.1.105
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 1.10.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.2+cu113
    OpenCV: 4.7.0
    MMEngine: 0.7.1

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/11 11:40:14 - mmengine - INFO - Config:
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=5),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=10, max_keep_ckpts=2,
        save_best='auto'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='TensorboardVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=100,
    val_interval=10,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=30),
    dict(
        type='CosineAnnealingLR',
        eta_min=9.375000000000001e-06,
        begin=50,
        end=100,
        T_max=50,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.0001875, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
dataset_type = 'CocoDataset'
data_root = '/root/MMDetection/mmdetection/data/balloon_dataset/balloon/'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='CachedMosaic',
        img_scale=(640, 640),
        pad_val=114.0,
        max_cached_images=20,
        random_pop=False),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=10,
        random_pop=False,
        pad_val=(114, 114, 114),
        prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=12,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='/root/MMDetection/mmdetection/data/balloon_dataset/balloon/',
        ann_file='coco_train.json',
        data_prefix=dict(img='train'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='CachedMosaic',
                img_scale=(640, 640),
                pad_val=114.0,
                max_cached_images=20,
                random_pop=False),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=10,
                random_pop=False,
                pad_val=(114, 114, 114),
                prob=0.5),
            dict(type='PackDetInputs')
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])),
    pin_memory=False)
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='/root/MMDetection/mmdetection/data/balloon_dataset/balloon/',
        ann_file='coco_val.json',
        data_prefix=dict(img='val'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='/root/MMDetection/mmdetection/data/balloon_dataset/balloon/',
        ann_file='coco_val.json',
        data_prefix=dict(img='val'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(classes=('balloon', ), palette=[(220, 20, 60)])))
val_evaluator = dict(
    type='CocoMetric',
    ann_file=
    '/root/MMDetection/mmdetection/data/balloon_dataset/balloon//coco_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file=
    '/root/MMDetection/mmdetection/data/balloon_dataset/balloon//coco_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }], [{
                        'type': 'LoadAnnotations',
                        'with_bbox': True
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.167,
        widen_factor=0.375,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
        ),
        frozen_stages=4),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[96, 192, 384],
        out_channels=96,
        num_csp_blocks=1,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=1,
        in_channels=96,
        stacked_convs=2,
        feat_channels=96,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=False,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 100
stage2_num_epochs = 20
base_lr = 0.0001875
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=95,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
checkpoint = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
metainfo = dict(classes=('balloon', ), palette=[(220, 20, 60)])
num_classes = 1
train_batch_size_per_gpu = 12
train_num_workers = 4
val_batch_size_per_gpu = 1
val_num_workers = 4
num_epochs_stage2 = 5
launcher = 'none'
work_dir = './work_dirs/rtmdet_tiny_config'

2023/06/11 11:40:20 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/11 11:40:20 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/11 11:40:22 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
2023/06/11 11:40:24 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([12, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.conv.weight - torch.Size([12, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.conv.weight - torch.Size([24, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.conv.weight - torch.Size([48, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([24, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([24, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.conv.weight - torch.Size([96, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.conv.weight - torch.Size([192, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.conv.weight - torch.Size([384, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([384, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

neck.reduce_layers.0.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([96, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([96, 384, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([1, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/11 11:40:24 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
2023/06/11 11:40:24 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/11 11:40:24 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/11 11:40:24 - mmengine - INFO - Checkpoints will be saved to /root/MMDetection/mmdetection/work_dirs/rtmdet_tiny_config.
2023/06/11 11:40:27 - mmengine - INFO - Epoch(train)   [1][5/6]  lr: 2.5864e-05  eta: 0:05:53  time: 0.5943  data_time: 0.4074  memory: 1541  loss: 2.6562  loss_cls: 2.0113  loss_bbox: 0.6448
2023/06/11 11:40:27 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:30 - mmengine - INFO - Epoch(train)   [2][5/6]  lr: 6.4656e-05  eta: 0:04:51  time: 0.4947  data_time: 0.3239  memory: 1554  loss: 2.6476  loss_cls: 1.9942  loss_bbox: 0.6534
2023/06/11 11:40:30 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:32 - mmengine - INFO - Epoch(train)   [3][5/6]  lr: 1.0345e-04  eta: 0:04:21  time: 0.4484  data_time: 0.2852  memory: 1535  loss: 2.6764  loss_cls: 2.0458  loss_bbox: 0.6306
2023/06/11 11:40:32 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:34 - mmengine - INFO - Epoch(train)   [4][5/6]  lr: 1.4224e-04  eta: 0:04:12  time: 0.4381  data_time: 0.2795  memory: 1535  loss: 2.6682  loss_cls: 2.0460  loss_bbox: 0.6222
2023/06/11 11:40:34 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:36 - mmengine - INFO - Epoch(train)   [5][5/6]  lr: 1.8103e-04  eta: 0:04:01  time: 0.4233  data_time: 0.2665  memory: 1535  loss: 2.6859  loss_cls: 2.0874  loss_bbox: 0.5985
2023/06/11 11:40:37 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:39 - mmengine - INFO - Epoch(train)   [6][5/6]  lr: 1.8750e-04  eta: 0:03:55  time: 0.4175  data_time: 0.2616  memory: 1535  loss: 2.6615  loss_cls: 2.0798  loss_bbox: 0.5817
2023/06/11 11:40:39 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:41 - mmengine - INFO - Epoch(train)   [7][5/6]  lr: 1.8750e-04  eta: 0:03:46  time: 0.4058  data_time: 0.2510  memory: 1535  loss: 2.6084  loss_cls: 2.0399  loss_bbox: 0.5686
2023/06/11 11:40:41 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:43 - mmengine - INFO - Epoch(train)   [8][5/6]  lr: 1.8750e-04  eta: 0:03:41  time: 0.4014  data_time: 0.2477  memory: 1535  loss: 2.5283  loss_cls: 1.9780  loss_bbox: 0.5504
2023/06/11 11:40:43 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:45 - mmengine - INFO - Epoch(train)   [9][5/6]  lr: 1.8750e-04  eta: 0:03:37  time: 0.3744  data_time: 0.2252  memory: 1535  loss: 2.4280  loss_cls: 1.9015  loss_bbox: 0.5265
2023/06/11 11:40:45 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:47 - mmengine - INFO - Epoch(train)  [10][5/6]  lr: 1.8750e-04  eta: 0:03:32  time: 0.3682  data_time: 0.2200  memory: 1535  loss: 2.2790  loss_cls: 1.7893  loss_bbox: 0.4897
2023/06/11 11:40:47 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:47 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/11 11:40:50 - mmengine - INFO - Epoch(val)  [10][ 5/13]    eta: 0:00:01  time: 0.1277  data_time: 0.1071  memory: 195  
2023/06/11 11:40:50 - mmengine - INFO - Epoch(val)  [10][10/13]    eta: 0:00:00  time: 0.0732  data_time: 0.0540  memory: 105  
2023/06/11 11:40:50 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:40:51 - mmengine - INFO - bbox_mAP_copypaste: 0.475 0.628 0.549 0.000 0.071 0.623
2023/06/11 11:40:51 - mmengine - INFO - Epoch(val) [10][13/13]  coco/bbox_mAP: 0.4750  coco/bbox_mAP_50: 0.6280  coco/bbox_mAP_75: 0.5490  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.0710  coco/bbox_mAP_l: 0.6230  data_time: 0.0418  time: 0.0608
2023/06/11 11:40:52 - mmengine - INFO - The best checkpoint with 0.4750 coco/bbox_mAP at 10 epoch is saved to best_coco/bbox_mAP_epoch_10.pth.
2023/06/11 11:40:55 - mmengine - INFO - Epoch(train)  [11][5/6]  lr: 1.8750e-04  eta: 0:03:28  time: 0.3650  data_time: 0.2174  memory: 1535  loss: 2.1113  loss_cls: 1.6493  loss_bbox: 0.4620
2023/06/11 11:40:55 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:57 - mmengine - INFO - Epoch(train)  [12][5/6]  lr: 1.8750e-04  eta: 0:03:25  time: 0.3689  data_time: 0.2212  memory: 1535  loss: 1.9430  loss_cls: 1.5049  loss_bbox: 0.4381
2023/06/11 11:40:57 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:40:59 - mmengine - INFO - Epoch(train)  [13][5/6]  lr: 1.8750e-04  eta: 0:03:23  time: 0.3635  data_time: 0.2161  memory: 1535  loss: 1.7585  loss_cls: 1.3443  loss_bbox: 0.4141
2023/06/11 11:40:59 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:02 - mmengine - INFO - Epoch(train)  [14][5/6]  lr: 1.8750e-04  eta: 0:03:22  time: 0.3707  data_time: 0.2238  memory: 1535  loss: 1.5689  loss_cls: 1.1773  loss_bbox: 0.3916
2023/06/11 11:41:02 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:04 - mmengine - INFO - Epoch(train)  [15][5/6]  lr: 1.8750e-04  eta: 0:03:21  time: 0.3790  data_time: 0.2329  memory: 1535  loss: 1.3967  loss_cls: 1.0263  loss_bbox: 0.3704
2023/06/11 11:41:04 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:07 - mmengine - INFO - Epoch(train)  [16][5/6]  lr: 1.8750e-04  eta: 0:03:18  time: 0.3802  data_time: 0.2342  memory: 1535  loss: 1.2635  loss_cls: 0.9073  loss_bbox: 0.3562
2023/06/11 11:41:07 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:09 - mmengine - INFO - Epoch(train)  [17][5/6]  lr: 1.8750e-04  eta: 0:03:15  time: 0.3811  data_time: 0.2346  memory: 1535  loss: 1.1443  loss_cls: 0.8037  loss_bbox: 0.3406
2023/06/11 11:41:09 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:11 - mmengine - INFO - Epoch(train)  [18][5/6]  lr: 1.8750e-04  eta: 0:03:13  time: 0.3875  data_time: 0.2408  memory: 1535  loss: 1.0722  loss_cls: 0.7366  loss_bbox: 0.3356
2023/06/11 11:41:11 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:14 - mmengine - INFO - Epoch(train)  [19][5/6]  lr: 1.8750e-04  eta: 0:03:11  time: 0.3906  data_time: 0.2442  memory: 1535  loss: 0.9898  loss_cls: 0.6687  loss_bbox: 0.3211
2023/06/11 11:41:14 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:16 - mmengine - INFO - Epoch(train)  [20][5/6]  lr: 1.8750e-04  eta: 0:03:08  time: 0.3898  data_time: 0.2433  memory: 1535  loss: 0.9304  loss_cls: 0.6246  loss_bbox: 0.3057
2023/06/11 11:41:16 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:16 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/11 11:41:18 - mmengine - INFO - Epoch(val)  [20][ 5/13]    eta: 0:00:00  time: 0.0530  data_time: 0.0339  memory: 193  
2023/06/11 11:41:18 - mmengine - INFO - Epoch(val)  [20][10/13]    eta: 0:00:00  time: 0.0456  data_time: 0.0268  memory: 105  
2023/06/11 11:41:18 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:41:18 - mmengine - INFO - bbox_mAP_copypaste: 0.660 0.797 0.759 0.000 0.403 0.770
2023/06/11 11:41:18 - mmengine - INFO - Epoch(val) [20][13/13]  coco/bbox_mAP: 0.6600  coco/bbox_mAP_50: 0.7970  coco/bbox_mAP_75: 0.7590  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4030  coco/bbox_mAP_l: 0.7700  data_time: 0.0238  time: 0.0425
2023/06/11 11:41:18 - mmengine - INFO - The previous best checkpoint /root/MMDetection/mmdetection/work_dirs/rtmdet_tiny_config/best_coco/bbox_mAP_epoch_10.pth is removed
2023/06/11 11:41:20 - mmengine - INFO - The best checkpoint with 0.6600 coco/bbox_mAP at 20 epoch is saved to best_coco/bbox_mAP_epoch_20.pth.
2023/06/11 11:41:22 - mmengine - INFO - Epoch(train)  [21][5/6]  lr: 1.8750e-04  eta: 0:03:04  time: 0.3830  data_time: 0.2357  memory: 1535  loss: 0.8638  loss_cls: 0.5711  loss_bbox: 0.2927
2023/06/11 11:41:22 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:24 - mmengine - INFO - Epoch(train)  [22][5/6]  lr: 1.8750e-04  eta: 0:03:01  time: 0.3768  data_time: 0.2295  memory: 1535  loss: 0.8227  loss_cls: 0.5347  loss_bbox: 0.2880
2023/06/11 11:41:25 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:27 - mmengine - INFO - Epoch(train)  [23][5/6]  lr: 1.8750e-04  eta: 0:02:58  time: 0.3729  data_time: 0.2257  memory: 1535  loss: 0.7964  loss_cls: 0.5114  loss_bbox: 0.2849
2023/06/11 11:41:27 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:29 - mmengine - INFO - Epoch(train)  [24][5/6]  lr: 1.8750e-04  eta: 0:02:56  time: 0.3678  data_time: 0.2205  memory: 1535  loss: 0.8255  loss_cls: 0.5418  loss_bbox: 0.2837
2023/06/11 11:41:29 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:31 - mmengine - INFO - Epoch(train)  [25][5/6]  lr: 1.8750e-04  eta: 0:02:54  time: 0.3737  data_time: 0.2261  memory: 1535  loss: 0.8174  loss_cls: 0.5342  loss_bbox: 0.2833
2023/06/11 11:41:31 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:34 - mmengine - INFO - Epoch(train)  [26][5/6]  lr: 1.8750e-04  eta: 0:02:51  time: 0.3719  data_time: 0.2249  memory: 1535  loss: 0.8059  loss_cls: 0.5263  loss_bbox: 0.2796
2023/06/11 11:41:34 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:36 - mmengine - INFO - Epoch(train)  [27][5/6]  lr: 1.8750e-04  eta: 0:02:49  time: 0.3691  data_time: 0.2218  memory: 1535  loss: 0.8311  loss_cls: 0.5459  loss_bbox: 0.2852
2023/06/11 11:41:36 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:38 - mmengine - INFO - Epoch(train)  [28][5/6]  lr: 1.8750e-04  eta: 0:02:46  time: 0.3661  data_time: 0.2164  memory: 1535  loss: 0.8479  loss_cls: 0.5626  loss_bbox: 0.2853
2023/06/11 11:41:38 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:40 - mmengine - INFO - Epoch(train)  [29][5/6]  lr: 1.8750e-04  eta: 0:02:44  time: 0.3748  data_time: 0.2253  memory: 1535  loss: 0.8716  loss_cls: 0.5759  loss_bbox: 0.2957
2023/06/11 11:41:41 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:43 - mmengine - INFO - Epoch(train)  [30][5/6]  lr: 1.8750e-04  eta: 0:02:42  time: 0.3779  data_time: 0.2250  memory: 1535  loss: 0.8634  loss_cls: 0.5700  loss_bbox: 0.2934
2023/06/11 11:41:43 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:43 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/11 11:41:45 - mmengine - INFO - Epoch(val)  [30][ 5/13]    eta: 0:00:00  time: 0.0422  data_time: 0.0220  memory: 195  
2023/06/11 11:41:45 - mmengine - INFO - Epoch(val)  [30][10/13]    eta: 0:00:00  time: 0.0394  data_time: 0.0191  memory: 105  
2023/06/11 11:41:45 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:41:45 - mmengine - INFO - bbox_mAP_copypaste: 0.667 0.781 0.757 0.000 0.381 0.779
2023/06/11 11:41:45 - mmengine - INFO - Epoch(val) [30][13/13]  coco/bbox_mAP: 0.6670  coco/bbox_mAP_50: 0.7810  coco/bbox_mAP_75: 0.7570  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.3810  coco/bbox_mAP_l: 0.7790  data_time: 0.0177  time: 0.0380
2023/06/11 11:41:45 - mmengine - INFO - The previous best checkpoint /root/MMDetection/mmdetection/work_dirs/rtmdet_tiny_config/best_coco/bbox_mAP_epoch_20.pth is removed
2023/06/11 11:41:47 - mmengine - INFO - The best checkpoint with 0.6670 coco/bbox_mAP at 30 epoch is saved to best_coco/bbox_mAP_epoch_30.pth.
2023/06/11 11:41:50 - mmengine - INFO - Epoch(train)  [31][5/6]  lr: 1.8750e-04  eta: 0:02:40  time: 0.3816  data_time: 0.2262  memory: 1535  loss: 0.8482  loss_cls: 0.5619  loss_bbox: 0.2862
2023/06/11 11:41:50 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:52 - mmengine - INFO - Epoch(train)  [32][5/6]  lr: 1.8750e-04  eta: 0:02:38  time: 0.3854  data_time: 0.2279  memory: 1535  loss: 0.7948  loss_cls: 0.5104  loss_bbox: 0.2844
2023/06/11 11:41:52 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:54 - mmengine - INFO - Epoch(train)  [33][5/6]  lr: 1.8750e-04  eta: 0:02:36  time: 0.3885  data_time: 0.2283  memory: 1542  loss: 0.7808  loss_cls: 0.4979  loss_bbox: 0.2829
2023/06/11 11:41:55 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:57 - mmengine - INFO - Epoch(train)  [34][5/6]  lr: 1.8750e-04  eta: 0:02:33  time: 0.3889  data_time: 0.2286  memory: 1535  loss: 0.7625  loss_cls: 0.4895  loss_bbox: 0.2730
2023/06/11 11:41:57 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:41:59 - mmengine - INFO - Epoch(train)  [35][5/6]  lr: 1.8750e-04  eta: 0:02:31  time: 0.3940  data_time: 0.2326  memory: 1535  loss: 0.7869  loss_cls: 0.5089  loss_bbox: 0.2780
2023/06/11 11:41:59 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:02 - mmengine - INFO - Epoch(train)  [36][5/6]  lr: 1.8750e-04  eta: 0:02:29  time: 0.3904  data_time: 0.2305  memory: 1535  loss: 0.7862  loss_cls: 0.5196  loss_bbox: 0.2667
2023/06/11 11:42:02 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:04 - mmengine - INFO - Epoch(train)  [37][5/6]  lr: 1.8750e-04  eta: 0:02:27  time: 0.3965  data_time: 0.2381  memory: 1535  loss: 0.7931  loss_cls: 0.5272  loss_bbox: 0.2660
2023/06/11 11:42:04 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:06 - mmengine - INFO - Epoch(train)  [38][5/6]  lr: 1.8750e-04  eta: 0:02:24  time: 0.3937  data_time: 0.2369  memory: 1535  loss: 0.7981  loss_cls: 0.5329  loss_bbox: 0.2653
2023/06/11 11:42:07 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:09 - mmengine - INFO - Epoch(train)  [39][5/6]  lr: 1.8750e-04  eta: 0:02:22  time: 0.3993  data_time: 0.2451  memory: 1544  loss: 0.8164  loss_cls: 0.5504  loss_bbox: 0.2659
2023/06/11 11:42:09 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:11 - mmengine - INFO - Epoch(train)  [40][5/6]  lr: 1.8750e-04  eta: 0:02:20  time: 0.3966  data_time: 0.2440  memory: 1535  loss: 0.8129  loss_cls: 0.5510  loss_bbox: 0.2620
2023/06/11 11:42:11 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:11 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/11 11:42:14 - mmengine - INFO - Epoch(val)  [40][ 5/13]    eta: 0:00:00  time: 0.0373  data_time: 0.0171  memory: 193  
2023/06/11 11:42:14 - mmengine - INFO - Epoch(val)  [40][10/13]    eta: 0:00:00  time: 0.0355  data_time: 0.0154  memory: 105  
2023/06/11 11:42:14 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:42:14 - mmengine - INFO - bbox_mAP_copypaste: 0.693 0.788 0.768 0.000 0.436 0.807
2023/06/11 11:42:14 - mmengine - INFO - Epoch(val) [40][13/13]  coco/bbox_mAP: 0.6930  coco/bbox_mAP_50: 0.7880  coco/bbox_mAP_75: 0.7680  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4360  coco/bbox_mAP_l: 0.8070  data_time: 0.0046  time: 0.0243
2023/06/11 11:42:14 - mmengine - INFO - The previous best checkpoint /root/MMDetection/mmdetection/work_dirs/rtmdet_tiny_config/best_coco/bbox_mAP_epoch_30.pth is removed
2023/06/11 11:42:16 - mmengine - INFO - The best checkpoint with 0.6930 coco/bbox_mAP at 40 epoch is saved to best_coco/bbox_mAP_epoch_40.pth.
2023/06/11 11:42:18 - mmengine - INFO - Epoch(train)  [41][5/6]  lr: 1.8750e-04  eta: 0:02:18  time: 0.4029  data_time: 0.2528  memory: 1535  loss: 0.8154  loss_cls: 0.5507  loss_bbox: 0.2647
2023/06/11 11:42:18 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:21 - mmengine - INFO - Epoch(train)  [42][5/6]  lr: 1.8750e-04  eta: 0:02:16  time: 0.3964  data_time: 0.2469  memory: 1535  loss: 0.8080  loss_cls: 0.5452  loss_bbox: 0.2627
2023/06/11 11:42:21 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:23 - mmengine - INFO - Epoch(train)  [43][5/6]  lr: 1.8750e-04  eta: 0:02:13  time: 0.3973  data_time: 0.2490  memory: 1535  loss: 0.7509  loss_cls: 0.5014  loss_bbox: 0.2495
2023/06/11 11:42:23 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:25 - mmengine - INFO - Epoch(train)  [44][5/6]  lr: 1.8750e-04  eta: 0:02:11  time: 0.3923  data_time: 0.2430  memory: 1535  loss: 0.7182  loss_cls: 0.4647  loss_bbox: 0.2535
2023/06/11 11:42:25 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:27 - mmengine - INFO - Epoch(train)  [45][5/6]  lr: 1.8750e-04  eta: 0:02:08  time: 0.3910  data_time: 0.2417  memory: 1535  loss: 0.6864  loss_cls: 0.4411  loss_bbox: 0.2453
2023/06/11 11:42:27 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:30 - mmengine - INFO - Epoch(train)  [46][5/6]  lr: 1.8750e-04  eta: 0:02:06  time: 0.3883  data_time: 0.2386  memory: 1535  loss: 0.6823  loss_cls: 0.4345  loss_bbox: 0.2478
2023/06/11 11:42:30 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:32 - mmengine - INFO - Epoch(train)  [47][5/6]  lr: 1.8750e-04  eta: 0:02:03  time: 0.3865  data_time: 0.2359  memory: 1536  loss: 0.6661  loss_cls: 0.4200  loss_bbox: 0.2461
2023/06/11 11:42:32 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:34 - mmengine - INFO - Epoch(train)  [48][5/6]  lr: 1.8750e-04  eta: 0:02:01  time: 0.3760  data_time: 0.2260  memory: 1535  loss: 0.6509  loss_cls: 0.4070  loss_bbox: 0.2439
2023/06/11 11:42:34 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:36 - mmengine - INFO - Epoch(train)  [49][5/6]  lr: 1.8750e-04  eta: 0:01:58  time: 0.3709  data_time: 0.2210  memory: 1535  loss: 0.6430  loss_cls: 0.4049  loss_bbox: 0.2381
2023/06/11 11:42:36 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:38 - mmengine - INFO - Epoch(train)  [50][5/6]  lr: 1.8750e-04  eta: 0:01:56  time: 0.3611  data_time: 0.2117  memory: 1537  loss: 0.6493  loss_cls: 0.4089  loss_bbox: 0.2404
2023/06/11 11:42:38 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:38 - mmengine - INFO - Saving checkpoint at 50 epochs
2023/06/11 11:42:40 - mmengine - INFO - Epoch(val)  [50][ 5/13]    eta: 0:00:00  time: 0.0257  data_time: 0.0057  memory: 193  
2023/06/11 11:42:41 - mmengine - INFO - Epoch(val)  [50][10/13]    eta: 0:00:00  time: 0.0257  data_time: 0.0057  memory: 105  
2023/06/11 11:42:41 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:42:41 - mmengine - INFO - bbox_mAP_copypaste: 0.722 0.823 0.788 0.000 0.403 0.842
2023/06/11 11:42:41 - mmengine - INFO - Epoch(val) [50][13/13]  coco/bbox_mAP: 0.7220  coco/bbox_mAP_50: 0.8230  coco/bbox_mAP_75: 0.7880  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4030  coco/bbox_mAP_l: 0.8420  data_time: 0.0045  time: 0.0244
2023/06/11 11:42:41 - mmengine - INFO - The previous best checkpoint /root/MMDetection/mmdetection/work_dirs/rtmdet_tiny_config/best_coco/bbox_mAP_epoch_40.pth is removed
2023/06/11 11:42:43 - mmengine - INFO - The best checkpoint with 0.7220 coco/bbox_mAP at 50 epoch is saved to best_coco/bbox_mAP_epoch_50.pth.
2023/06/11 11:42:45 - mmengine - INFO - Epoch(train)  [51][5/6]  lr: 1.8742e-04  eta: 0:01:53  time: 0.3639  data_time: 0.2143  memory: 1535  loss: 0.6727  loss_cls: 0.4239  loss_bbox: 0.2488
2023/06/11 11:42:45 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:47 - mmengine - INFO - Epoch(train)  [52][5/6]  lr: 1.8701e-04  eta: 0:01:51  time: 0.3637  data_time: 0.2144  memory: 1535  loss: 0.6622  loss_cls: 0.4152  loss_bbox: 0.2471
2023/06/11 11:42:47 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:49 - mmengine - INFO - Epoch(train)  [53][5/6]  lr: 1.8625e-04  eta: 0:01:49  time: 0.3631  data_time: 0.2146  memory: 1535  loss: 0.6538  loss_cls: 0.4095  loss_bbox: 0.2443
2023/06/11 11:42:50 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:52 - mmengine - INFO - Epoch(train)  [54][5/6]  lr: 1.8515e-04  eta: 0:01:46  time: 0.3608  data_time: 0.2123  memory: 1535  loss: 0.6364  loss_cls: 0.3981  loss_bbox: 0.2382
2023/06/11 11:42:52 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:54 - mmengine - INFO - Epoch(train)  [55][5/6]  lr: 1.8370e-04  eta: 0:01:44  time: 0.3545  data_time: 0.2066  memory: 1535  loss: 0.6249  loss_cls: 0.3896  loss_bbox: 0.2352
2023/06/11 11:42:54 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:56 - mmengine - INFO - Epoch(train)  [56][5/6]  lr: 1.8191e-04  eta: 0:01:41  time: 0.3570  data_time: 0.2095  memory: 1535  loss: 0.6144  loss_cls: 0.3812  loss_bbox: 0.2332
2023/06/11 11:42:56 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:42:58 - mmengine - INFO - Epoch(train)  [57][5/6]  lr: 1.7980e-04  eta: 0:01:39  time: 0.3674  data_time: 0.2194  memory: 1535  loss: 0.6257  loss_cls: 0.3881  loss_bbox: 0.2376
2023/06/11 11:42:58 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:01 - mmengine - INFO - Epoch(train)  [58][5/6]  lr: 1.7737e-04  eta: 0:01:37  time: 0.3713  data_time: 0.2234  memory: 1550  loss: 0.6262  loss_cls: 0.3857  loss_bbox: 0.2405
2023/06/11 11:43:01 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:03 - mmengine - INFO - Epoch(train)  [59][5/6]  lr: 1.7462e-04  eta: 0:01:34  time: 0.3732  data_time: 0.2248  memory: 1535  loss: 0.5914  loss_cls: 0.3601  loss_bbox: 0.2313
2023/06/11 11:43:03 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:05 - mmengine - INFO - Epoch(train)  [60][5/6]  lr: 1.7157e-04  eta: 0:01:32  time: 0.3738  data_time: 0.2253  memory: 1541  loss: 0.5874  loss_cls: 0.3588  loss_bbox: 0.2286
2023/06/11 11:43:06 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:06 - mmengine - INFO - Saving checkpoint at 60 epochs
2023/06/11 11:43:08 - mmengine - INFO - Epoch(val)  [60][ 5/13]    eta: 0:00:00  time: 0.0256  data_time: 0.0056  memory: 193  
2023/06/11 11:43:08 - mmengine - INFO - Epoch(val)  [60][10/13]    eta: 0:00:00  time: 0.0255  data_time: 0.0056  memory: 105  
2023/06/11 11:43:08 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:43:08 - mmengine - INFO - bbox_mAP_copypaste: 0.746 0.838 0.826 0.000 0.455 0.863
2023/06/11 11:43:08 - mmengine - INFO - Epoch(val) [60][13/13]  coco/bbox_mAP: 0.7460  coco/bbox_mAP_50: 0.8380  coco/bbox_mAP_75: 0.8260  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4550  coco/bbox_mAP_l: 0.8630  data_time: 0.0045  time: 0.0241
2023/06/11 11:43:08 - mmengine - INFO - The previous best checkpoint /root/MMDetection/mmdetection/work_dirs/rtmdet_tiny_config/best_coco/bbox_mAP_epoch_50.pth is removed
2023/06/11 11:43:10 - mmengine - INFO - The best checkpoint with 0.7460 coco/bbox_mAP at 60 epoch is saved to best_coco/bbox_mAP_epoch_60.pth.
2023/06/11 11:43:12 - mmengine - INFO - Epoch(train)  [61][5/6]  lr: 1.6824e-04  eta: 0:01:30  time: 0.3716  data_time: 0.2232  memory: 1537  loss: 0.5959  loss_cls: 0.3697  loss_bbox: 0.2262
2023/06/11 11:43:12 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:14 - mmengine - INFO - Epoch(train)  [62][5/6]  lr: 1.6462e-04  eta: 0:01:27  time: 0.3715  data_time: 0.2238  memory: 1535  loss: 0.5973  loss_cls: 0.3729  loss_bbox: 0.2244
2023/06/11 11:43:14 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:16 - mmengine - INFO - Epoch(train)  [63][5/6]  lr: 1.6075e-04  eta: 0:01:25  time: 0.3757  data_time: 0.2285  memory: 1535  loss: 0.6011  loss_cls: 0.3752  loss_bbox: 0.2259
2023/06/11 11:43:17 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:19 - mmengine - INFO - Epoch(train)  [64][5/6]  lr: 1.5663e-04  eta: 0:01:23  time: 0.3733  data_time: 0.2258  memory: 1535  loss: 0.5960  loss_cls: 0.3712  loss_bbox: 0.2248
2023/06/11 11:43:19 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:21 - mmengine - INFO - Epoch(train)  [65][5/6]  lr: 1.5228e-04  eta: 0:01:20  time: 0.3726  data_time: 0.2248  memory: 1535  loss: 0.6167  loss_cls: 0.3851  loss_bbox: 0.2317
2023/06/11 11:43:21 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:23 - mmengine - INFO - Epoch(train)  [66][5/6]  lr: 1.4772e-04  eta: 0:01:18  time: 0.3781  data_time: 0.2309  memory: 1535  loss: 0.6131  loss_cls: 0.3849  loss_bbox: 0.2283
2023/06/11 11:43:23 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:25 - mmengine - INFO - Epoch(train)  [67][5/6]  lr: 1.4297e-04  eta: 0:01:16  time: 0.3724  data_time: 0.2249  memory: 1535  loss: 0.6200  loss_cls: 0.3897  loss_bbox: 0.2302
2023/06/11 11:43:26 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:28 - mmengine - INFO - Epoch(train)  [68][5/6]  lr: 1.3804e-04  eta: 0:01:13  time: 0.3678  data_time: 0.2206  memory: 1535  loss: 0.6410  loss_cls: 0.4056  loss_bbox: 0.2354
2023/06/11 11:43:28 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:30 - mmengine - INFO - Epoch(train)  [69][5/6]  lr: 1.3295e-04  eta: 0:01:11  time: 0.3575  data_time: 0.2102  memory: 1535  loss: 0.7063  loss_cls: 0.4588  loss_bbox: 0.2476
2023/06/11 11:43:30 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:32 - mmengine - INFO - Epoch(train)  [70][5/6]  lr: 1.2773e-04  eta: 0:01:09  time: 0.3656  data_time: 0.2181  memory: 1535  loss: 0.7129  loss_cls: 0.4638  loss_bbox: 0.2491
2023/06/11 11:43:32 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:32 - mmengine - INFO - Saving checkpoint at 70 epochs
2023/06/11 11:43:34 - mmengine - INFO - Epoch(val)  [70][ 5/13]    eta: 0:00:00  time: 0.0248  data_time: 0.0057  memory: 193  
2023/06/11 11:43:34 - mmengine - INFO - Epoch(val)  [70][10/13]    eta: 0:00:00  time: 0.0246  data_time: 0.0057  memory: 105  
2023/06/11 11:43:34 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:43:34 - mmengine - INFO - bbox_mAP_copypaste: 0.701 0.826 0.789 0.000 0.447 0.816
2023/06/11 11:43:34 - mmengine - INFO - Epoch(val) [70][13/13]  coco/bbox_mAP: 0.7010  coco/bbox_mAP_50: 0.8260  coco/bbox_mAP_75: 0.7890  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4470  coco/bbox_mAP_l: 0.8160  data_time: 0.0047  time: 0.0234
2023/06/11 11:43:37 - mmengine - INFO - Epoch(train)  [71][5/6]  lr: 1.2239e-04  eta: 0:01:06  time: 0.3640  data_time: 0.2142  memory: 1558  loss: 0.7261  loss_cls: 0.4753  loss_bbox: 0.2509
2023/06/11 11:43:37 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:39 - mmengine - INFO - Epoch(train)  [72][5/6]  lr: 1.1695e-04  eta: 0:01:04  time: 0.3568  data_time: 0.2071  memory: 1535  loss: 0.7315  loss_cls: 0.4815  loss_bbox: 0.2500
2023/06/11 11:43:39 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:41 - mmengine - INFO - Epoch(train)  [73][5/6]  lr: 1.1145e-04  eta: 0:01:02  time: 0.3602  data_time: 0.2111  memory: 1535  loss: 0.7228  loss_cls: 0.4771  loss_bbox: 0.2457
2023/06/11 11:43:41 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:43 - mmengine - INFO - Epoch(train)  [74][5/6]  lr: 1.0589e-04  eta: 0:00:59  time: 0.3619  data_time: 0.2127  memory: 1535  loss: 0.7064  loss_cls: 0.4674  loss_bbox: 0.2390
2023/06/11 11:43:43 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:45 - mmengine - INFO - Epoch(train)  [75][5/6]  lr: 1.0030e-04  eta: 0:00:57  time: 0.3584  data_time: 0.2091  memory: 1547  loss: 0.7104  loss_cls: 0.4672  loss_bbox: 0.2432
2023/06/11 11:43:46 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:48 - mmengine - INFO - Epoch(train)  [76][5/6]  lr: 9.4708e-05  eta: 0:00:55  time: 0.3633  data_time: 0.2148  memory: 1535  loss: 0.6939  loss_cls: 0.4546  loss_bbox: 0.2393
2023/06/11 11:43:48 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:50 - mmengine - INFO - Epoch(train)  [77][5/6]  lr: 8.9128e-05  eta: 0:00:52  time: 0.3674  data_time: 0.2189  memory: 1535  loss: 0.6079  loss_cls: 0.3837  loss_bbox: 0.2242
2023/06/11 11:43:50 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:53 - mmengine - INFO - Epoch(train)  [78][5/6]  lr: 8.3585e-05  eta: 0:00:50  time: 0.3757  data_time: 0.2269  memory: 1535  loss: 0.6013  loss_cls: 0.3775  loss_bbox: 0.2238
2023/06/11 11:43:53 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:55 - mmengine - INFO - Epoch(train)  [79][5/6]  lr: 7.8100e-05  eta: 0:00:48  time: 0.3777  data_time: 0.2305  memory: 1535  loss: 0.5895  loss_cls: 0.3647  loss_bbox: 0.2248
2023/06/11 11:43:55 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:57 - mmengine - INFO - Epoch(train)  [80][5/6]  lr: 7.2696e-05  eta: 0:00:46  time: 0.3826  data_time: 0.2353  memory: 1556  loss: 0.5940  loss_cls: 0.3671  loss_bbox: 0.2269
2023/06/11 11:43:57 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:43:57 - mmengine - INFO - Saving checkpoint at 80 epochs
2023/06/11 11:43:59 - mmengine - INFO - Epoch(val)  [80][ 5/13]    eta: 0:00:00  time: 0.0252  data_time: 0.0063  memory: 194  
2023/06/11 11:44:00 - mmengine - INFO - Epoch(val)  [80][10/13]    eta: 0:00:00  time: 0.0253  data_time: 0.0064  memory: 105  
2023/06/11 11:44:00 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:44:00 - mmengine - INFO - bbox_mAP_copypaste: 0.742 0.840 0.806 0.000 0.483 0.858
2023/06/11 11:44:00 - mmengine - INFO - Epoch(val) [80][13/13]  coco/bbox_mAP: 0.7420  coco/bbox_mAP_50: 0.8400  coco/bbox_mAP_75: 0.8060  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4830  coco/bbox_mAP_l: 0.8580  data_time: 0.0053  time: 0.0242
2023/06/11 11:44:02 - mmengine - INFO - Epoch(train)  [81][5/6]  lr: 6.7393e-05  eta: 0:00:43  time: 0.3833  data_time: 0.2347  memory: 1537  loss: 0.5791  loss_cls: 0.3536  loss_bbox: 0.2255
2023/06/11 11:44:02 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:04 - mmengine - INFO - Epoch(train)  [82][5/6]  lr: 6.2213e-05  eta: 0:00:41  time: 0.3843  data_time: 0.2358  memory: 1535  loss: 0.5796  loss_cls: 0.3552  loss_bbox: 0.2244
2023/06/11 11:44:04 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:07 - mmengine - INFO - Epoch(train)  [83][5/6]  lr: 5.7175e-05  eta: 0:00:39  time: 0.3840  data_time: 0.2354  memory: 1535  loss: 0.5820  loss_cls: 0.3595  loss_bbox: 0.2225
2023/06/11 11:44:07 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:09 - mmengine - INFO - Epoch(train)  [84][5/6]  lr: 5.2301e-05  eta: 0:00:37  time: 0.3853  data_time: 0.2359  memory: 1535  loss: 0.5869  loss_cls: 0.3617  loss_bbox: 0.2252
2023/06/11 11:44:09 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:11 - mmengine - INFO - Epoch(train)  [85][5/6]  lr: 4.7608e-05  eta: 0:00:34  time: 0.3768  data_time: 0.2276  memory: 1535  loss: 0.5958  loss_cls: 0.3650  loss_bbox: 0.2308
2023/06/11 11:44:11 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:14 - mmengine - INFO - Epoch(train)  [86][5/6]  lr: 4.3117e-05  eta: 0:00:32  time: 0.3855  data_time: 0.2363  memory: 1535  loss: 0.6097  loss_cls: 0.3753  loss_bbox: 0.2344
2023/06/11 11:44:14 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:16 - mmengine - INFO - Epoch(train)  [87][5/6]  lr: 3.8843e-05  eta: 0:00:30  time: 0.3803  data_time: 0.2304  memory: 1541  loss: 0.6010  loss_cls: 0.3670  loss_bbox: 0.2339
2023/06/11 11:44:16 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:18 - mmengine - INFO - Epoch(train)  [88][5/6]  lr: 3.4805e-05  eta: 0:00:27  time: 0.3819  data_time: 0.2326  memory: 1535  loss: 0.5902  loss_cls: 0.3607  loss_bbox: 0.2295
2023/06/11 11:44:18 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:20 - mmengine - INFO - Epoch(train)  [89][5/6]  lr: 3.1018e-05  eta: 0:00:25  time: 0.3823  data_time: 0.2337  memory: 1535  loss: 0.5883  loss_cls: 0.3612  loss_bbox: 0.2271
2023/06/11 11:44:20 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:23 - mmengine - INFO - Epoch(train)  [90][5/6]  lr: 2.7497e-05  eta: 0:00:23  time: 0.3885  data_time: 0.2401  memory: 1535  loss: 0.5915  loss_cls: 0.3633  loss_bbox: 0.2282
2023/06/11 11:44:23 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:23 - mmengine - INFO - Saving checkpoint at 90 epochs
2023/06/11 11:44:25 - mmengine - INFO - Epoch(val)  [90][ 5/13]    eta: 0:00:00  time: 0.0253  data_time: 0.0064  memory: 193  
2023/06/11 11:44:25 - mmengine - INFO - Epoch(val)  [90][10/13]    eta: 0:00:00  time: 0.0252  data_time: 0.0064  memory: 105  
2023/06/11 11:44:25 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:44:26 - mmengine - INFO - bbox_mAP_copypaste: 0.742 0.842 0.808 0.000 0.471 0.855
2023/06/11 11:44:26 - mmengine - INFO - Epoch(val) [90][13/13]  coco/bbox_mAP: 0.7420  coco/bbox_mAP_50: 0.8420  coco/bbox_mAP_75: 0.8080  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4710  coco/bbox_mAP_l: 0.8550  data_time: 0.0053  time: 0.0240
2023/06/11 11:44:28 - mmengine - INFO - Epoch(train)  [91][5/6]  lr: 2.4255e-05  eta: 0:00:21  time: 0.3877  data_time: 0.2395  memory: 1535  loss: 0.5687  loss_cls: 0.3454  loss_bbox: 0.2233
2023/06/11 11:44:28 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:30 - mmengine - INFO - Epoch(train)  [92][5/6]  lr: 2.1307e-05  eta: 0:00:18  time: 0.3859  data_time: 0.2383  memory: 1535  loss: 0.5642  loss_cls: 0.3434  loss_bbox: 0.2208
2023/06/11 11:44:30 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:32 - mmengine - INFO - Epoch(train)  [93][5/6]  lr: 1.8663e-05  eta: 0:00:16  time: 0.3819  data_time: 0.2335  memory: 1549  loss: 0.5657  loss_cls: 0.3491  loss_bbox: 0.2167
2023/06/11 11:44:32 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:35 - mmengine - INFO - Epoch(train)  [94][5/6]  lr: 1.6334e-05  eta: 0:00:14  time: 0.3857  data_time: 0.2337  memory: 1535  loss: 0.5580  loss_cls: 0.3422  loss_bbox: 0.2157
2023/06/11 11:44:35 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:37 - mmengine - INFO - Epoch(train)  [95][5/6]  lr: 1.4329e-05  eta: 0:00:11  time: 0.3852  data_time: 0.2322  memory: 1535  loss: 0.5550  loss_cls: 0.3433  loss_bbox: 0.2117
2023/06/11 11:44:37 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:37 - mmengine - INFO - Switch pipeline now!
2023/06/11 11:44:39 - mmengine - INFO - Epoch(train)  [96][5/6]  lr: 1.2656e-05  eta: 0:00:09  time: 0.3811  data_time: 0.2295  memory: 1535  loss: 0.5438  loss_cls: 0.3397  loss_bbox: 0.2041
2023/06/11 11:44:39 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:41 - mmengine - INFO - Epoch(train)  [97][5/6]  lr: 1.1321e-05  eta: 0:00:07  time: 0.3603  data_time: 0.2093  memory: 1535  loss: 0.5533  loss_cls: 0.3494  loss_bbox: 0.2039
2023/06/11 11:44:41 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:42 - mmengine - INFO - Epoch(train)  [98][5/6]  lr: 1.0330e-05  eta: 0:00:04  time: 0.3423  data_time: 0.1924  memory: 1535  loss: 0.5424  loss_cls: 0.3453  loss_bbox: 0.1971
2023/06/11 11:44:42 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:43 - mmengine - INFO - Epoch(train)  [99][5/6]  lr: 9.6874e-06  eta: 0:00:02  time: 0.3224  data_time: 0.1736  memory: 1535  loss: 0.5373  loss_cls: 0.3474  loss_bbox: 0.1899
2023/06/11 11:44:43 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:45 - mmengine - INFO - Epoch(train) [100][5/6]  lr: 9.3945e-06  eta: 0:00:00  time: 0.3050  data_time: 0.1570  memory: 1535  loss: 0.5160  loss_cls: 0.3357  loss_bbox: 0.1803
2023/06/11 11:44:45 - mmengine - INFO - Exp name: rtmdet_tiny_config_20230611_114011
2023/06/11 11:44:45 - mmengine - INFO - Saving checkpoint at 100 epochs
2023/06/11 11:44:47 - mmengine - INFO - Epoch(val) [100][ 5/13]    eta: 0:00:00  time: 0.0253  data_time: 0.0064  memory: 193  
2023/06/11 11:44:47 - mmengine - INFO - Epoch(val) [100][10/13]    eta: 0:00:00  time: 0.0253  data_time: 0.0064  memory: 105  
2023/06/11 11:44:47 - mmengine - INFO - Evaluating bbox...
2023/06/11 11:44:47 - mmengine - INFO - bbox_mAP_copypaste: 0.736 0.846 0.805 0.000 0.484 0.849
2023/06/11 11:44:47 - mmengine - INFO - Epoch(val) [100][13/13]  coco/bbox_mAP: 0.7360  coco/bbox_mAP_50: 0.8460  coco/bbox_mAP_75: 0.8050  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4840  coco/bbox_mAP_l: 0.8490  data_time: 0.0054  time: 0.0242
